{"remainingRequest":"/Users/nafizbayrak/Downloads/vuejs-nodejs/frontend-vuejs/node_modules/babel-loader/lib/index.js!/Users/nafizbayrak/Downloads/vuejs-nodejs/frontend-vuejs/node_modules/eslint-loader/index.js??ref--13-0!/Users/nafizbayrak/Downloads/vuejs-nodejs/frontend-vuejs/src/store/modules/tasks.module.js","dependencies":[{"path":"/Users/nafizbayrak/Downloads/vuejs-nodejs/frontend-vuejs/src/store/modules/tasks.module.js","mtime":1624110344485},{"path":"/Users/nafizbayrak/Downloads/vuejs-nodejs/frontend-vuejs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nafizbayrak/Downloads/vuejs-nodejs/frontend-vuejs/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/nafizbayrak/Downloads/vuejs-nodejs/frontend-vuejs/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9uYWZpemJheXJhay9Eb3dubG9hZHMvdnVlanMtbm9kZWpzL2Zyb250ZW5kLXZ1ZWpzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgdGFza1NlcnZpY2UgZnJvbSAnLi4vLi4vY29tbW9uL3Rhc2suc2VydmljZSc7CnZhciBzdGF0ZSA9IHsKICB0YXNrczogW10sCiAgdGFzazoge30KfTsKdmFyIGFjdGlvbnMgPSB7CiAgZmV0Y2hUYXNrczogZnVuY3Rpb24gZmV0Y2hUYXNrcyhfcmVmKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgY29tbWl0LCBfeWllbGQkdGFza1NlcnZpY2UkZ2UsIGRhdGE7CgogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIHRhc2tTZXJ2aWNlLmdldEFsbFRhc2tzKCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgX3lpZWxkJHRhc2tTZXJ2aWNlJGdlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBkYXRhID0gX3lpZWxkJHRhc2tTZXJ2aWNlJGdlLmRhdGE7CiAgICAgICAgICAgICAgY29tbWl0KCdzZXRUYXNrcycsIGRhdGEpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgbmV3VGFzazogZnVuY3Rpb24gbmV3VGFzayhfcmVmMiwgdGFzaykgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciBjb21taXQsIF95aWVsZCR0YXNrU2VydmljZSRhZCwgZGF0YTsKCiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gdGFza1NlcnZpY2UuYWRkTmV3VGFzayh0YXNrKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBfeWllbGQkdGFza1NlcnZpY2UkYWQgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICBkYXRhID0gX3lpZWxkJHRhc2tTZXJ2aWNlJGFkLmRhdGE7CiAgICAgICAgICAgICAgY29tbWl0KCd1cGRhdGVUYXNrJywgZGF0YSk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkoKTsKICB9LAogIGZldGNoVGFzazogZnVuY3Rpb24gZmV0Y2hUYXNrKF9yZWYzLCB0YXNrSWQpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICB2YXIgY29tbWl0LCBfeWllbGQkdGFza1NlcnZpY2UkZ2UyLCBkYXRhOwoKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiB0YXNrU2VydmljZS5nZXRUYXNrKHRhc2tJZCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgX3lpZWxkJHRhc2tTZXJ2aWNlJGdlMiA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkdGFza1NlcnZpY2UkZ2UyLmRhdGE7CiAgICAgICAgICAgICAgY29tbWl0KCdzZXRUYXNrJywgZGF0YSk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSkoKTsKICB9LAogIGRlbGV0ZVRhc2s6IGZ1bmN0aW9uIGRlbGV0ZVRhc2soX3JlZjQsIHRhc2tJZCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgIHZhciBjb21taXQsIF95aWVsZCR0YXNrU2VydmljZSRkZSwgZGF0YTsKCiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjQuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gdGFza1NlcnZpY2UuZGVsZXRlVGFzayh0YXNrSWQpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIF95aWVsZCR0YXNrU2VydmljZSRkZSA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkdGFza1NlcnZpY2UkZGUuZGF0YTsKICAgICAgICAgICAgICBjb21taXQoJ2RlbGV0ZVRhc2snLCBkYXRhKTsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU0KTsKICAgIH0pKSgpOwogIH0KfTsKdmFyIG11dGF0aW9ucyA9IHsKICBzZXRUYXNrczogZnVuY3Rpb24gc2V0VGFza3Moc3RhdGUsIHRhc2tzKSB7CiAgICByZXR1cm4gc3RhdGUudGFza3MgPSB0YXNrcy5kYXRhOwogIH0sCiAgdXBkYXRlVGFzazogZnVuY3Rpb24gdXBkYXRlVGFzayhzdGF0ZSwgdGFzaykgewogICAgcmV0dXJuIHN0YXRlLnRhc2tzLnB1c2godGFzay5kYXRhKTsKICB9LAogIHNldFRhc2s6IGZ1bmN0aW9uIHNldFRhc2soc3RhdGUsIHRhc2spIHsKICAgIHJldHVybiBzdGF0ZS50YXNrID0gdGFzay5kYXRhOwogIH0sCiAgZGVsZXRlVGFzazogZnVuY3Rpb24gZGVsZXRlVGFzayhzdGF0ZSwgdGFzaykgewogICAgdmFyIG5ld1Rhc2sgPSBbXTsKICAgIHN0YXRlLnRhc2tzLm1hcChmdW5jdGlvbiAodCkgewogICAgICBpZiAodGFzay5faWQgIT0gdC5faWQpIHsKICAgICAgICBuZXdUYXNrLnB1c2godCk7CiAgICAgIH0KICAgIH0pOwogICAgc3RhdGUudGFza3MgPSBuZXdUYXNrOwogICAgcmV0dXJuIHN0YXRlLnRhc2tzOwogIH0KfTsKdmFyIGdldHRlcnMgPSB7CiAgZ2V0VGFza3M6IGZ1bmN0aW9uIGdldFRhc2tzKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUudGFza3M7CiAgfSwKICBnZXRUYXNrOiBmdW5jdGlvbiBnZXRUYXNrKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUudGFzazsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgYWN0aW9uczogYWN0aW9ucywKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBnZXR0ZXJzOiBnZXR0ZXJzCn07"},{"version":3,"sources":["/Users/nafizbayrak/Downloads/vuejs-nodejs/frontend-vuejs/src/store/modules/tasks.module.js"],"names":["taskService","state","tasks","task","actions","fetchTasks","commit","getAllTasks","data","newTask","addNewTask","fetchTask","taskId","getTask","deleteTask","mutations","setTasks","updateTask","push","setTask","map","t","_id","getters","getTasks"],"mappings":"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","sourcesContent":["import taskService from '../../common/task.service'\n\nconst state = {\n    tasks: [],\n    task: {}\n};\n\nconst actions = {\n    async fetchTasks({ commit }) {\n        const { data } = await taskService.getAllTasks()\n        commit('setTasks', data)\n    },\n    async newTask({ commit }, task) {\n        const { data } = await taskService.addNewTask(task)\n        commit('updateTask', data)\n    },\n    async fetchTask({ commit }, taskId) {\n        const { data } = await taskService.getTask(taskId)\n        commit('setTask', data)\n    },\n    async deleteTask({commit},taskId){\n        const {data} = await taskService.deleteTask(taskId)\n        commit('deleteTask',data)\n    }\n};\n\nconst mutations = {\n    setTasks: (state, tasks) => {\n        return state.tasks = tasks.data\n    },\n    updateTask: (state, task) => {\n        return state.tasks.push(task.data)\n    },\n    setTask: (state, task) => {\n        return state.task = task.data\n    },\n    deleteTask:(state,task)=>{\n        let newTask=[]\n        state.tasks.map(t=>{\n            if(task._id != t._id){\n                newTask.push(t)\n            }\n        })\n        state.tasks = newTask\n        return state.tasks\n    }\n         \n    \n};\nconst getters = {\n    getTasks: (state) => {\n        return state.tasks\n    },\n    getTask: (state) => {\n        return state.task\n    }\n\n};\n\nexport default {\n    state,\n    actions,\n    mutations,\n    getters\n}"]}]}