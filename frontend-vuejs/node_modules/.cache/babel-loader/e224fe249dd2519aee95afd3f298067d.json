{"remainingRequest":"/Users/nafizbayrak/Downloads/task-Man/task-man/node_modules/babel-loader/lib/index.js!/Users/nafizbayrak/Downloads/task-Man/task-man/node_modules/eslint-loader/index.js??ref--13-0!/Users/nafizbayrak/Downloads/task-Man/task-man/src/store/modules/auth.module.js","dependencies":[{"path":"/Users/nafizbayrak/Downloads/task-Man/task-man/src/store/modules/auth.module.js","mtime":1621686296510},{"path":"/Users/nafizbayrak/Downloads/task-Man/task-man/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nafizbayrak/Downloads/task-Man/task-man/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/nafizbayrak/Downloads/task-Man/task-man/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9uYWZpemJheXJhay9Eb3dubG9hZHMvdGFzay1NYW4vdGFzay1tYW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBBdXRoU2VydmljZSBmcm9tICIuLi8uLi9jb21tb24vYXV0aC5zZXJ2aWNlIjsKaW1wb3J0IEFwaVNlcnZpY2UgZnJvbSAiLi4vLi4vY29tbW9uL2FwaS5zZXJ2aWNlIjsKaW1wb3J0IGp3dFNlcnZpY2UgZnJvbSAiLi4vLi4vY29tbW9uL2p3dC5zZXJ2aWNlIjsKdmFyIHN0YXRlID0gewogIGVycm9yczoge30sCiAgdXNlcjoge30sCiAgaXNBdXRoZW50aWNhdGVkOiAhIWp3dFNlcnZpY2UuZ2V0VG9rZW4oKQp9Owp2YXIgYWN0aW9ucyA9IHsKICBsb2dpbjogZnVuY3Rpb24gbG9naW4oX3JlZiwgdXNlcikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGNvbW1pdCwgX3lpZWxkJEF1dGhTZXJ2aWNlJGxvLCBkYXRhLCBtZXNzYWdlOwoKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiBBdXRoU2VydmljZS5sb2dpbih1c2VyKTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBfeWllbGQkQXV0aFNlcnZpY2UkbG8gPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkQXV0aFNlcnZpY2UkbG8uZGF0YTsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTsKICAgICAgICAgICAgICBBcGlTZXJ2aWNlLnNldEhlYWRlcigpOwogICAgICAgICAgICAgIGNvbW1pdCgnc2V0VXNlcicsIGRhdGEpOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNzsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDExOwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQudDApOwogICAgICAgICAgICAgIG1lc3NhZ2UgPSB7CiAgICAgICAgICAgICAgICBtZXNzYWdlOiAiUGxlYXNlIGNoZWNrIHlvdXIgaW5wdXRzISIKICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgIGNvbW1pdCgnc2V0RXJyb3InLCBtZXNzYWdlKTsKICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoKTsKCiAgICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMSwgMTFdXSk7CiAgICB9KSkoKTsKICB9LAogIHJlZ2lzdGVyOiBmdW5jdGlvbiByZWdpc3RlcihfcmVmMiwgdXNlcikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciBjb21taXQsIF95aWVsZCRBdXRoU2VydmljZSRyZSwgZGF0YSwgbWVzc2FnZTsKCiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDQ7CiAgICAgICAgICAgICAgcmV0dXJuIEF1dGhTZXJ2aWNlLnJlZ2lzdGVyKHVzZXIpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIF95aWVsZCRBdXRoU2VydmljZSRyZSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkQXV0aFNlcnZpY2UkcmUuZGF0YTsKICAgICAgICAgICAgICBjb21taXQoJ3NldFVzZXInLCBkYXRhKTsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE1OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gOTsKICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQyLnQwKTsKICAgICAgICAgICAgICBtZXNzYWdlID0gewogICAgICAgICAgICAgICAgbWVzc2FnZTogIlBsZWFzZSBjaGVjayB5b3VyIGlucHV0cyEiCiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICBjb21taXQoJ3NldEVycm9yJywgbWVzc2FnZSk7CiAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCk7CgogICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMSwgOV1dKTsKICAgIH0pKSgpOwogIH0sCiAgbG9nb3V0OiBmdW5jdGlvbiBsb2dvdXQoX3JlZjMpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICB2YXIgY29tbWl0LCBfeWllbGQkQXV0aFNlcnZpY2UkbG8yLCBkYXRhOwoKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBBdXRoU2VydmljZS5sb2dvdXQoKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBfeWllbGQkQXV0aFNlcnZpY2UkbG8yID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgZGF0YSA9IF95aWVsZCRBdXRoU2VydmljZSRsbzIuZGF0YTsKICAgICAgICAgICAgICBBcGlTZXJ2aWNlLnNldEhlYWRlcigpOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwogICAgICAgICAgICAgIGNvbW1pdCgncHVyZ2VBdXRoJyk7CgogICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSkoKTsKICB9LAogIGNoZWNrQXV0aDogZnVuY3Rpb24gY2hlY2tBdXRoKGNvbnRleHQpIHsKICAgIGlmIChqd3RTZXJ2aWNlLmdldFRva2VuKCkpIHsKICAgICAgQXBpU2VydmljZS5zZXRIZWFkZXIoKTsKICAgIH0gZWxzZSB7CiAgICAgIGNvbnRleHQuY29tbWl0KCdwdXJnZUF1dGgnKTsKICAgIH0KICB9Cn07CnZhciBtdXRhdGlvbnMgPSB7CiAgc2V0VXNlcjogZnVuY3Rpb24gc2V0VXNlcihzdGF0ZSwgZGF0YSkgewogICAgZGF0YS5zdWNjZXNzID8gc3RhdGUuaXNBdXRoZW50aWNhdGVkID0gdHJ1ZSA6IHN0YXRlLmlzQXV0aGVudGljYXRlZCA9IGZhbHNlOwogICAgand0U2VydmljZS5zYXZlVG9rZW4oZGF0YS5hY2Nlc3NfdG9rZW4pOwogICAgcmV0dXJuIHN0YXRlLnVzZXIgPSBkYXRhLnVzZXI7CiAgfSwKICByZWdpc3RlcjogZnVuY3Rpb24gcmVnaXN0ZXIoKSB7fSwKICBwdXJnZUF1dGg6IGZ1bmN0aW9uIHB1cmdlQXV0aChzdGF0ZSkgewogICAgc3RhdGUuaXNBdXRoZW50aWNhdGVkID0gZmFsc2U7CiAgICBzdGF0ZS51c2VyID0ge307CiAgICBzdGF0ZS5lcnJvcnMgPSB7fTsKICAgIGp3dFNlcnZpY2UuZGVzdHJveVRva2VuKCk7CiAgfSwKICBzZXRFcnJvcjogZnVuY3Rpb24gc2V0RXJyb3Ioc3RhdGUsIG1lc3NhZ2UpIHsKICAgIHJldHVybiBzdGF0ZS5lcnJvcnMgPSBtZXNzYWdlOwogIH0KfTsKdmFyIGdldHRlcnMgPSB7CiAgY3VycmVudFVzZXI6IGZ1bmN0aW9uIGN1cnJlbnRVc2VyKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUudXNlcjsKICB9LAogIGlzQXV0aGVudGljYXRlZDogZnVuY3Rpb24gaXNBdXRoZW50aWNhdGVkKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuaXNBdXRoZW50aWNhdGVkOwogIH0sCiAgZ2V0RXJyb3JzOiBmdW5jdGlvbiBnZXRFcnJvcnMoc3RhdGUpIHsKICAgIGNvbnNvbGUubG9nKHN0YXRlKTsKICAgIHJldHVybiBzdGF0ZS5lcnJvcnM7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHN0YXRlLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMsCiAgZ2V0dGVyczogZ2V0dGVycwp9Ow=="},{"version":3,"sources":["/Users/nafizbayrak/Downloads/task-Man/task-man/src/store/modules/auth.module.js"],"names":["AuthService","ApiService","jwtService","state","errors","user","isAuthenticated","getToken","actions","login","commit","data","console","log","setHeader","message","Error","register","logout","checkAuth","context","mutations","setUser","success","saveToken","access_token","purgeAuth","destroyToken","setError","getters","currentUser","getErrors"],"mappings":"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","sourcesContent":["import AuthService from \"../../common/auth.service\";\nimport ApiService from \"../../common/api.service\";\nimport jwtService from \"../../common/jwt.service\"\n\nconst state = {\n    errors:{},\n    user: {},\n    isAuthenticated: !!jwtService.getToken()\n\n};\nconst actions = {\n    async login({ commit }, user) {\n\n        try {\n            const { data } = await AuthService.login(user)\n            console.log(data)\n            ApiService.setHeader();\n            commit('setUser', data)\n        } catch (error) {\n            console.log(error)\n            let message = {message:\"Please check your inputs!\"}\n            commit('setError', message);\n            throw new Error()\n        }\n\n       \n    },\n    async register({ commit }, user) {\n        try {\n            const {data} = await AuthService.register(user) \n            commit('setUser',data)\n        } catch (error) {\n            console.log(error)\n            let message = {message:\"Please check your inputs!\"}\n            commit('setError', message);\n            throw new Error()\n\n        }\n    },\n    async logout({commit}){\n        const {data} = await AuthService.logout()\n        ApiService.setHeader();\n\n        console.log(data)\n        commit('purgeAuth')\n    },\n    checkAuth(context) {\n        if (jwtService.getToken()) {\n            ApiService.setHeader();\n        } else {\n            context.commit('purgeAuth');\n        }\n    },\n\n};\n\nconst mutations = {\n    setUser: (state, data) => {\n        data.success ? state.isAuthenticated = true : state.isAuthenticated = false\n        jwtService.saveToken(data.access_token)\n        return state.user = data.user\n    },\n    register: () => {\n\n    },\n    purgeAuth: (state) => {\n        state.isAuthenticated = false;\n        state.user = {};\n        state.errors = {};\n        jwtService.destroyToken();\n    },\n    setError: (state, message) => {\n        return state.errors = message\n    }\n};\nconst getters = {\n    currentUser(state) {\n        return state.user;\n    },\n    isAuthenticated(state) {\n        return state.isAuthenticated;\n    },\n    getErrors(state) {\n        console.log(state)\n        return state.errors\n    }\n};\nexport default {\n    state,\n    actions,\n    mutations,\n    getters\n}"]}]}