{"remainingRequest":"/Users/nafizbayrak/Downloads/vuejs-nodejs/frontend-vuejs/node_modules/babel-loader/lib/index.js!/Users/nafizbayrak/Downloads/vuejs-nodejs/frontend-vuejs/node_modules/eslint-loader/index.js??ref--13-0!/Users/nafizbayrak/Downloads/vuejs-nodejs/frontend-vuejs/src/store/modules/auth.module.js","dependencies":[{"path":"/Users/nafizbayrak/Downloads/vuejs-nodejs/frontend-vuejs/src/store/modules/auth.module.js","mtime":1624110344485},{"path":"/Users/nafizbayrak/Downloads/vuejs-nodejs/frontend-vuejs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nafizbayrak/Downloads/vuejs-nodejs/frontend-vuejs/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/nafizbayrak/Downloads/vuejs-nodejs/frontend-vuejs/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/nafizbayrak/Downloads/vuejs-nodejs/frontend-vuejs/src/store/modules/auth.module.js"],"names":["AuthService","ApiService","jwtService","state","errors","user","isAuthenticated","getToken","profile","actions","login","commit","data","setHeader","message","Error","register","logout","editUser","userId","id","checkAuth","context","token","JSON","parse","fetchProfile","mutations","setUser","success","saveToken","access_token","setCurrentUser","name","email","purgeAuth","destroyToken","setError","getters","currentUser","getErrors","getUser"],"mappings":"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","sourcesContent":["import AuthService from \"../../common/auth.service\";\nimport ApiService from \"../../common/api.service\";\nimport jwtService from \"../../common/jwt.service\"\n\nconst state = {\n    errors:{},\n    user: {},\n    isAuthenticated: !!jwtService.getToken(),\n    profile:{}\n};\nconst actions = {\n    async login({ commit }, user) {\n\n        try {\n            const { data } = await AuthService.login(user)\n            ApiService.setHeader();\n            commit('setUser', data)\n        } catch (error) {\n            let message = {message:\"Please check your inputs!\"}\n            commit('setError', message);\n            throw new Error()\n        }\n\n       \n    },\n    async register({ commit }, user) {\n        try {\n            const {data} = await AuthService.register(user) \n            commit('setUser',data)\n        } catch (error) {\n            let message = {message:\"Please check your inputs!\"}\n            commit('setError', message);\n            throw new Error()\n\n        }\n    },\n    async logout({commit}){\n        const {data} = await AuthService.logout()\n        ApiService.setHeader();\n\n        commit('purgeAuth')\n    },\n    async editUser({commit},user,userId){\n        const {data} = await AuthService.editUser(user,user.id)\n        commit('setCurrentUser',data)\n    },\n    async checkAuth(context) {\n        if (jwtService.getToken().token) {\n            ApiService.setHeader();\n            let user = JSON.parse(jwtService.getToken().user) \n            context.commit('setUser',user)\n        } else {\n            context.commit('purgeAuth');\n        }\n    },\n    async fetchProfile({commit}){\n        const {data} = await AuthService.profile()\n        commit('setProfile',data)\n    }\n\n};\n\nconst mutations = {\n    setUser: (state, data) => {\n        data.success ? state.isAuthenticated = true : state.isAuthenticated = false\n        jwtService.saveToken(data.access_token,data.user)\n        state.user = data.user\n    },\n    setCurrentUser:(state,data)=>{\n        state.user.name = data.name\n        state.user.email = data.email \n        return state.user\n    },\n    register: () => {\n\n    },\n    purgeAuth: (state) => {\n        state.isAuthenticated = false;\n        state.user = {};\n        state.errors = {};\n        jwtService.destroyToken();\n    },\n    setError: (state, message) => {\n        return state.errors = message\n    }\n};\nconst getters = {\n    currentUser(state) {\n        return state.user;\n    },\n    isAuthenticated(state) {\n        return state.isAuthenticated;\n    },\n    getErrors(state) {\n        return state.errors\n    },\n    getUser(state){\n        return state.user\n    }\n};\nexport default {\n    state,\n    actions,\n    mutations,\n    getters\n}"]}]}